#!/usr/bin/python
import xgboost as xgb
import pandas as pd

### simple example
# load file from text file, also binary buffer generated by xgboost
#dtrain = xgb.DMatrix('./agaricus.txt.train')
# dtest = xgb.DMatrix('./agaricus.txt.test')

train = pd.read_csv("")
target = train['target']
train = train.drop(['target'], axis = 1)
xgtrain = xgb.DMatrix(train.values, target.values)

# specify parameters via map, definition are same as c++ version
param = {'max_depth':20, 'eta':0.1, 'silent':1, 'objective':'binary:logistic', 'early_stop_round': 3 }

# specify validations set to watch performance
watchlist  = [(dtest,'eval'), (dtrain,'train')]

num_round = 15
early_stop_rounds = 3
bst = xgb.train(param, xgtrain, num_round, watchlist =  watchlist, early_stopping_rounds= early_stop_rounds)
bst.save_model('0001.model')
bst.dump_model('dump.raw.txt')

# this is prediction
#preds = bst.predict(dtest)
'''
bst.save_model('0001.model')
# dump model
bst.dump_model('dump.raw.txt')
# dump model with feature map
bst.dump_model('dump.nice.txt','../data/featmap.txt')
'''
